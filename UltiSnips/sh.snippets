priority 0

snippet #!
#!/usr/bin/env bash

endsnippet

snippet "# T"
# TODO: $1
endsnippet

snippet "# TODO"
# TODO: $1
endsnippet

snippet "# vim" "# vim"
# vim:sw=2 sts=2 ts=2 et:
endsnippet

snippet set "set"
set -eux -o pipefail

endsnippet

snippet script_dir "script_dir"
script_dir=$(dirname $(readlink -f \$0))

endsnippet

snippet func "function"
${1:func}() {
  local ${2:arg}="\$1"; shift
  ${3:exit 1}
}
endsnippet

snippet getopt "getopt"
usage_exit() {
  local prog="./$(basename \$0)"
  echo "usage: $prog [OPTIONS...] ARGS..."
  echo ""
  echo "options:"
  echo " -v, --verbose"
  echo " -h, --help"
  exit 1
}

echo_badopt() {
  echo "\$0: illegal option -- \$1"
}

main() {
  local option_verbose=0
  local opt

  # 引数を解析する
  while getopts -- "-:hv" opt; do
    case $opt in
      -)
        case $OPTARG in
          help) usage_exit;;
          verbose) option_verbose=$(($option_verbose+1));;
          *) echo_badopt $OPTARG; usage_exit;;
        esac;;
      h) usage_exit;;
      v) option_verbose=$(($option_verbose+1));;
      \?) usage_exit;;
    esac
  done
  shift $((OPTIND-1))

  if [[ $# -ne 0 ]]; then
    usage_exit
  fi

  echo "option_verbose: $option_verbose"

  exit 0
}

main "$@"
endsnippet

snippet if
if ${1:false}; then
  exit 1 # TODO:
fi
endsnippet

snippet "if [["
if [[ ${1:0 -ne 0} ]]; then
  exit 1 # TODO:
fi
endsnippet

snippet "if [["
if [[ ${1:0 -ne 0} ]]; then
  exit 1 # TODO:
fi
endsnippet

snippet while
while ${1:false}; do
  exit 1 # TODO:
done
endsnippet

snippet "while read"
while read -r ${1:line}; do
  exit 1 # TODO:
done
endsnippet

snippet "while [["
while [[ ${1:0 -ne 0} ]]; do
  exit 1 # TODO:
done
endsnippet
