priority 0

snippet #!
#!/usr/bin/env ${1:bash}

endsnippet

snippet "exit 1"
exit 1 # TODO: ${1:ここを実装する}
endsnippet

snippet "# T"
# TODO: ${1:ここを実装する}
endsnippet

snippet "# TODO"
# TODO: ${1:ここを実装する}
endsnippet

snippet "# vim" "# vim"
# vim:et sts=2 sw=2 ts=2:
endsnippet

snippet set
set -eux -o pipefail

endsnippet

snippet script_dir
script_dir=$(dirname $(readlink -f \$0))

endsnippet

snippet function
${1:function}() {
  local ${2:arg}="\$1"; shift
  ${3:exit 1 # TODO: ここを実装する}
}
endsnippet

snippet getopt
usage_exit() {
  local prog="./$(basename \$0)"
  echo "$1" # TODO: 短い説明を書く
  echo "usage: $prog [OPTIONS...] ARGS..."
  echo ""
  echo "options:"
  echo " -v, --verbose"
  echo " -h, --help"
  exit 1
}

echo_badopt() {
  echo "\$0: illegal option -- \$1"
}

main() {
  local option_verbose=0
  local opt

  # 引数を解析する
  while getopts -- "$0-:hv" opt; do
    case $opt in
      -)
        case $OPTARG in
          help) usage_exit;;
          verbose) option_verbose=$(($option_verbose+1));;
          *) echo_badopt $OPTARG; usage_exit;;
        esac;;
      h) usage_exit;;
      v) option_verbose=$(($option_verbose+1));;
      \?) usage_exit;;
    esac
  done
  shift $((OPTIND-1))

  # オプションなし引数を確認する
  if [[ $# -ne 0 ]]; then
    usage_exit
  fi

  echo "option_verbose: $option_verbose"
  exit 1 # TODO: 実装する

  exit 0
}

main "$@"
endsnippet

snippet if
if ${1:false}; then
  ${2:exit 1 # TODO: ここを実装する}
fi
endsnippet

snippet "if [["
if [[ ${1:0 -ne 0} ]]; then
  ${2:exit 1 # TODO: ここを実装する}
fi
endsnippet

snippet while
while ${1:false}; do
  ${2:exit 1 # TODO: ここを実装する}
done
endsnippet

snippet "while read"
while read -r ${1:line}; do
  ${2:exit 1 # TODO: ここを実装する}
done
endsnippet

snippet "while [["
while [[ ${1:0 -ne 0} ]]; do
  ${2:exit 1 # TODO: ここを実装する}
done
endsnippet

snippet for
local ${1:name}
for ${1:name} in ${2:words}; do
  ${3:exit 1 # TODO: ここを実装する}
done
endsnippet

snippet "for (("
local ${1:i}
for (( $1 = 0 ; $1 < ${2:10}; $1++)); do
  ${3:exit 1 # TODO: ここを実装する}
done
endsnippet
